const competenciaUtils = require('../../tools/competencia-utils');
const { testTool } = require('../helpers/test-utils');

async function runCompetenciaUtilsTests() {
  console.log('ğŸš€ Testando Competencia Utils...\n');

  // Teste 1: Gerar Ãºltimos 6 meses
  console.log('ğŸ“Š Teste 1: Gerar Ãºltimos 6 meses');
  await testTool(competenciaUtils, {
    operacao: 'gerar',
    tipo: 'ultimos_meses',
    quantidade: 6
  }, ['CompetÃªncias Geradas', 'ultimos_meses', '6 competÃªncia(s) gerada(s)']);

  // Teste 2: Gerar prÃ³ximos 3 meses
  console.log('ğŸ“Š Teste 2: Gerar prÃ³ximos 3 meses');
  await testTool(competenciaUtils, {
    operacao: 'gerar',
    tipo: 'proximos_meses',
    quantidade: 3,
    incluir_atual: false
  }, ['CompetÃªncias Geradas', 'proximos_meses', '3 competÃªncia(s) gerada(s)']);

  // Teste 3: Gerar sequÃªncia entre competÃªncias
  console.log('ğŸ“Š Teste 3: Gerar sequÃªncia');
  await testTool(competenciaUtils, {
    operacao: 'gerar',
    tipo: 'sequencia',
    competencia_inicio: '01/2024',
    competencia_fim: '06/2024'
  }, ['CompetÃªncias Geradas', 'sequencia', '6 competÃªncia(s) gerada(s)']);

  // Teste 4: Gerar ano completo
  console.log('ğŸ“Š Teste 4: Gerar ano completo');
  await testTool(competenciaUtils, {
    operacao: 'gerar',
    tipo: 'ano_completo',
    ano_referencia: 2024
  }, ['CompetÃªncias Geradas', 'ano_completo', '12 competÃªncia(s) gerada(s)']);

  // Teste 5: Gerar trimestre
  console.log('ğŸ“Š Teste 5: Gerar trimestre');
  await testTool(competenciaUtils, {
    operacao: 'gerar',
    tipo: 'trimestre',
    ano_referencia: 2024
  }, ['CompetÃªncias Geradas', 'trimestre', '3 competÃªncia(s) gerada(s)']);

  // Teste 6: Gerar em formato MM/YY
  console.log('ğŸ“Š Teste 6: Gerar em formato MM/YY');
  await testTool(competenciaUtils, {
    operacao: 'gerar',
    tipo: 'ultimos_meses',
    quantidade: 3,
    formato_destino: 'mm_yy'
  }, ['CompetÃªncias Geradas', 'ultimos_meses', '3 competÃªncia(s) gerada(s)']);

  // Teste 7: Validar formatos mistos
  console.log('ğŸ“Š Teste 7: Validar formatos mistos');
  await testTool(competenciaUtils, {
    operacao: 'validar',
    competencias: ['01/2024', '02/24', '24-03', '2024-04', '13/24', '00/23'],
    tipo_validacao: 'formato'
  }, ['ValidaÃ§Ã£o de CompetÃªncias', 'formato', 'Resumo']);

  // Teste 8: Validar intervalo
  console.log('ğŸ“Š Teste 8: Validar intervalo');
  await testTool(competenciaUtils, {
    operacao: 'validar',
    competencias: ['06/2024', '12/2023', '01/2025'],
    tipo_validacao: 'intervalo',
    competencia_minima: '01/2024',
    competencia_maxima: '12/2024'
  }, ['ValidaÃ§Ã£o de CompetÃªncias', 'intervalo', 'Dentro do intervalo']);

  // Teste 9: Converter entre formatos
  console.log('ğŸ“Š Teste 9: Converter formatos');
  await testTool(competenciaUtils, {
    operacao: 'converter',
    competencias: ['01/24', '24-02', '2024-03'],
    tipo_conversao: 'formato',
    formato_destino: 'mm_yyyy'
  }, ['ConversÃ£o de CompetÃªncias', 'formato', 'processada(s)']);

  // Teste 10: Converter para primeiro dia
  console.log('ğŸ“Š Teste 10: Converter para primeiro dia');
  await testTool(competenciaUtils, {
    operacao: 'converter',
    competencias: ['03/2024'],
    tipo_conversao: 'data_inicio'
  }, ['ConversÃ£o de CompetÃªncias', 'data_inicio', '2024-03-01']);

  // Teste 11: Converter para Ãºltimo dia
  console.log('ğŸ“Š Teste 11: Converter para Ãºltimo dia');
  await testTool(competenciaUtils, {
    operacao: 'converter',
    competencias: ['02/2024'],
    tipo_conversao: 'data_fim'
  }, ['ConversÃ£o de CompetÃªncias', 'data_fim', '2024-02-29']);

  // Teste 12: Converter para timestamps
  console.log('ğŸ“Š Teste 12: Converter para timestamps');
  await testTool(competenciaUtils, {
    operacao: 'converter',
    competencias: ['01/2024'],
    tipo_conversao: 'timestamp'
  }, ['ConversÃ£o de CompetÃªncias', 'timestamp', 'InÃ­cio', 'Fim']);

  // Teste 13: Calcular diferenÃ§a entre competÃªncias
  console.log('ğŸ“Š Teste 13: Calcular diferenÃ§a');
  await testTool(competenciaUtils, {
    operacao: 'calcular',
    tipo_calculo: 'diferenca',
    competencia_inicio: '01/2024',
    competencia_fim: '06/2024'
  }, ['CÃ¡lculo de CompetÃªncias', 'diferenca', 'meses']);

  // Teste 14: Adicionar meses
  console.log('ğŸ“Š Teste 14: Adicionar meses');
  await testTool(competenciaUtils, {
    operacao: 'calcular',
    tipo_calculo: 'adicionar',
    competencias: ['03/2024'],
    valor: 6
  }, ['CÃ¡lculo de CompetÃªncias', 'adicionar', '03/2024']);

  // Teste 15: Subtrair meses
  console.log('ğŸ“Š Teste 15: Subtrair meses');
  await testTool(competenciaUtils, {
    operacao: 'calcular',
    tipo_calculo: 'subtrair',
    competencias: ['06/2024'],
    valor: 3
  }, ['CÃ¡lculo de CompetÃªncias', 'subtrair', '06/2024']);

  // Teste 16: Calcular trimestre
  console.log('ğŸ“Š Teste 16: Calcular trimestre');
  await testTool(competenciaUtils, {
    operacao: 'calcular',
    tipo_calculo: 'trimestre',
    competencias: ['05/2024', '08/2024', '11/2024']
  }, ['CÃ¡lculo de CompetÃªncias', 'trimestre', 'Q2', 'Q3', 'Q4']);

  // Teste 17: Calcular dias na competÃªncia
  console.log('ğŸ“Š Teste 17: Calcular dias na competÃªncia');
  await testTool(competenciaUtils, {
    operacao: 'calcular',
    tipo_calculo: 'dias_competencia',
    competencias: ['02/2024', '04/2024']
  }, ['CÃ¡lculo de CompetÃªncias', 'dias_competencia', '29 dias', '30 dias']);

  // Teste 18: Formatar por extenso
  console.log('ğŸ“Š Teste 18: Formatar por extenso');
  await testTool(competenciaUtils, {
    operacao: 'formatar',
    competencias: ['01/2024', '12/2023'],
    formato: 'extenso'
  }, ['FormataÃ§Ã£o de CompetÃªncias', 'extenso', 'Janeiro de 2024', 'Dezembro']);

  // Teste 19: Formatar abreviado
  console.log('ğŸ“Š Teste 19: Formatar abreviado');
  await testTool(competenciaUtils, {
    operacao: 'formatar',
    competencias: ['06/2024'],
    formato: 'abreviado'
  }, ['FormataÃ§Ã£o de CompetÃªncias', 'abreviado', 'Jun']);

  // Teste 20: Formatar customizado
  console.log('ğŸ“Š Teste 20: Formatar customizado');
  await testTool(competenciaUtils, {
    operacao: 'formatar',
    competencias: ['03/2024'],
    formato: 'customizado',
    formato_customizado: 'MMMM/YY'
  }, ['FormataÃ§Ã£o de CompetÃªncias', 'customizado', 'MarÃ§o/24']);

  // Teste 21: Formatar fiscal
  console.log('ğŸ“Š Teste 21: Formatar fiscal');
  await testTool(competenciaUtils, {
    operacao: 'formatar',
    competencias: ['04/2024'],
    formato: 'fiscal'
  }, ['FormataÃ§Ã£o de CompetÃªncias', 'fiscal', 'Q2/2024', 'ExercÃ­cio']);

  // Teste 22: AnÃ¡lise completa
  console.log('ğŸ“Š Teste 22: AnÃ¡lise completa');
  await testTool(competenciaUtils, {
    operacao: 'analisar',
    competencias: ['03/2024'],
    tipo_analise: 'completa',
    incluir_vencimentos: true
  }, ['AnÃ¡lise de CompetÃªncias', 'completa', 'competencia original', 'Vencimentos Fiscais']);

  // Teste 23: AnÃ¡lise estatÃ­stica
  console.log('ğŸ“Š Teste 23: AnÃ¡lise estatÃ­stica');
  await testTool(competenciaUtils, {
    operacao: 'analisar',
    competencias: ['01/2024', '06/2024', '12/2024'],
    tipo_analise: 'estatisticas'
  }, ['AnÃ¡lise de CompetÃªncias', 'estatisticas', 'total competencias', 'periodo meses']);

  // Teste 24: Erro - operaÃ§Ã£o invÃ¡lida
  console.log('ğŸ“Š Teste 24: OperaÃ§Ã£o invÃ¡lida');
  await testTool(competenciaUtils, {
    operacao: 'operacao_inexistente'
  }, ['OperaÃ§Ã£o InvÃ¡lida', 'gerar, validar, converter']);

  // Teste 25: Erro - dados insuficientes para sequÃªncia
  console.log('ğŸ“Š Teste 25: Dados insuficientes para sequÃªncia');
  await testTool(competenciaUtils, {
    operacao: 'gerar',
    tipo: 'sequencia'
    // Faltam competencia_inicio e competencia_fim
  }, ['Erro na GeraÃ§Ã£o', 'competencia_inicio e competencia_fim']);

  // Teste 26: Erro - nenhuma competÃªncia para validaÃ§Ã£o
  console.log('ğŸ“Š Teste 26: Nenhuma competÃªncia para validaÃ§Ã£o');
  await testTool(competenciaUtils, {
    operacao: 'validar',
    competencias: []
  }, ['Erro de ValidaÃ§Ã£o', 'Nenhuma competÃªncia fornecida']);

  // Teste 27: CompetÃªncias com anos YY
  console.log('ğŸ“Š Teste 27: CompetÃªncias com anos YY');
  await testTool(competenciaUtils, {
    operacao: 'validar',
    competencias: ['01/99', '12/00', '06/24', '13/25'],
    seculo_base: 2000,
    limite_yy: 50
  }, ['ValidaÃ§Ã£o de CompetÃªncias', 'formato', 'Resumo']);

  // Teste 28: Formato YY-MM
  console.log('ğŸ“Š Teste 28: Formato YY-MM');
  await testTool(competenciaUtils, {
    operacao: 'converter',
    competencias: ['24-01', '24-12'],
    formato_destino: 'mm_yyyy'
  }, ['ConversÃ£o de CompetÃªncias', 'formato', '01/2024', '12/2024']);

  // Teste 29: Gerar com ordem decrescente
  console.log('ğŸ“Š Teste 29: Gerar ordem decrescente');
  await testTool(competenciaUtils, {
    operacao: 'gerar',
    tipo: 'ultimos_meses',
    quantidade: 3,
    ordem: 'decrescente'
  }, ['CompetÃªncias Geradas', 'ultimos_meses', '3 competÃªncia(s) gerada(s)']);

  // Teste 30: AnÃ¡lise com vencimentos especÃ­ficos
  console.log('ğŸ“Š Teste 30: AnÃ¡lise com vencimentos');
  await testTool(competenciaUtils, {
    operacao: 'analisar',
    competencias: ['12/2023'],
    tipo_analise: 'completa',
    incluir_vencimentos: true
  }, ['AnÃ¡lise de CompetÃªncias', 'completa', 'ICMS', 'ISS', 'PIS/COFINS']);

  console.log('âœ… Competencia Utils - Todos os testes passaram!');
}

if (require.main === module) {
  runCompetenciaUtilsTests().catch(console.error);
}

module.exports = { runCompetenciaUtilsTests };
